Linux Application Installations

# NFS

## client

We will mount the VM Server Hosts directory inside this guest.

    mkdir /mnt/vmsrv

edit `/etc/fstab` example:

    vl-vmsrv2:/OVS/downloads    /mnt/vmsrv  nfs defaults    0 0

    yum install -y nfs-utils
    mount -t rpc_pipefs sunpc /var/lib/nfs/rpc_pipefs
    service portmap start
    service nfs start
    mount -a

## server

    yum install nfs-utils
    mount -t rpc_pipefs sunpc /var/lib/nfs/rpc_pipefs
    service portmap start
    system-config-securitylevel-tui --quiet --port=111 --port=2049
    service nfs start
    /usr/sbin/exportfs -a

server: /etc/exports example:

    /OVS/downloads *(rw,sync,all_squash,anonuid=500,anongid=500)

When this is changed we need to do:

    exportfs -va
    service nfs restart

# Java

## Just JRE/home/oracle/projects/work-doco

    yum install java-1.6.0-openjdk

## JDK

Google download JDK\
Select Java SE JDK and download\
Select the .bin download, not .rpm.bin

as root:

    chmod 755 jdk-6u23-linux-i586.bin
    ./jdk-6u23-linux-i586.bin/
    mv jdk1.6.0_23/ /usr/lib/jvm/

in the

-   debian linux: \~/.bashrc

-   red hat linux: \~/.bash\_profile

as oracle:

    export JAVA_HOME=/usr/lib/jvm/jdk1.6.0_23
    export PATH=$JAVA_HOME/bin:$PATH

# Tomcat

    yum install tomcat5
    chkconfig --level 5 tomcat5 on

Open port 8080

    /usr/bin/system-config-securitylevel-tui

Customize \> other ports \> 8080:tcp

Create an `oracle` user and give sudo permissions.

    useradd oracle
    passwd oracle
    usermod -a -G tomcat oracle
    yum install sudo
    visudo

add the following line to the end of the file:

    oracle wcfs=/sbin/service tomcat5 restart,/sbin/service tomcat5 stop, /sbin/service tomcat5 start

# Glassfish

Setup the WWW proxy so wget will work. You’ll probably have a different
URL to download glassfish from.

[Install Java](#install_java)

    yum -y install unzip
    useradd oracle
    passwd oracle
    su - oracle
    export http_proxy=http://www-proxy.sg.oracle.com
    mkdir bin; cd bin

Make sure the download is .zip, not .sh. We want to do a console based
installation.

    wget -c http://download.java.net/glassfish/3.0.1/release/glassfish-3.0.1.zip
    unzip glassfish-3.0.1.zip

If you need a proxy for wget use something like:

    export http_proxy=http://your.proxy.server:port && wget -c http://whatever

put the asadmin dir into your path for oracle:

    vi ~/.bashrc
    export PATH=$JAVA_HOME/bin:$PATH:~/bin/glassfishv3/glassfish/bin/

## Auto start/stop scripts:

in `/etc/init.d/glassfish` put:

### startup/shutdown script:

    #!/bin/bash
    #
    # glassfish:          Startup script for Glassfish Application Server.
    #
    # chkconfig: 3 80 05
    # description:      Startup script for domain1 of Glassfish Application Server.
     
    GLASSFISH_HOME=/home/oracle/bin/glassfishv3/glassfish;
    export GLASSFISH_HOME
     
    GLASSFISH_OWNER=oracle;
    export GLASSFISH_OWNER
     
    start() {
            echo -n "Starting Glassfish: "
            echo "Starting Glassfish at `date`" >> $GLASSFISH_HOME/domains/domain1/logs/startup.log
            su $GLASSFISH_OWNER -c "$GLASSFISH_HOME/bin/asadmin start-domain domain1" >> $GLASSFISH_HOME/domains/domain1/logs/startup.log
            sleep 2
            echo "done"
    }
     
    stop() {
            echo -n "Stopping Glassfish: "
            echo "Stopping Glassfish at `date`" >> $GLASSFISH_HOME/domains/domain1/logs/startup.log
            su $GLASSFISH_OWNER -c "$GLASSFISH_HOME/bin/asadmin stop-domain domain1" >> $GLASSFISH_HOME/domains/domain1/logs/startup.log
            echo "done"
    }
     
    # See how we were called.
    case "$1" in
            start)
                    start
                    ;;
            stop)
                    stop
                    ;;
            restart)
                    stop
                    start
                    ;;
            *)
                    echo $"Usage: glassfish {start|stop|restart}"
                    exit
    esac

### Install Service

    #chmod +x /etc/init.d/glassfish
    #chkconfig --add glassfish
    #chkconfig --level 3 glassfish on

### Start Service

    #/etc/init.d/glassfish start

### Open port in firewall

    system-config-securitylevel-tui --quiet --port=8080

ensure the value returned by `hostname` is on the line (at the end of
the line) for the 127.0.0.1 ipaddress\
ensure nothing is running on ports 8080 4848

    sudo netstat -atunp | grep 4848; sudo netstat -atunp | grep 8080
    netstat -atun | grep 4848; netstat -atun | grep 8080

## Admin

Deploy/Undeploy

    $ cd ~oracle/bin/glassfish-3.0.1/glassfish/bin
    $ ./asadmin list-applications
    $ ./asadmin deploy ~/projects/MvnSesFe/target/SES.war 
    $ ./asadmin undeploy SES
    $ ./asadmin start-domain
    $ ./asadmin stop-domain

Watch the logs

    $ cd ~/bin/glassfish-3.0.1/glassfish/domains/domain1/logs/
    $ tail -f server.log

See where your app is deployed to:

    $ cd ~/bin/glassfish-3.0.1/glassfish/domains/domain1/applications
    $ find .

## Automatically Deploy/Undeploy

    cp sample-dir/hello.war as-install/domains/domain1/autodeploy

## More on ports

To change the HTTP port to 10080:

    asadmin set server.http-service.http-listener.http-listener-1.port=10080 

To change the HTTPS port to 10443:

    asadmin set server.http-service.http-listener.http-listener-2.port=10443 

To change the administration server port to 14848:

    asadmin set server.http-service.http-listener.admin-listener.port=14848 

It’s handy to know you can grep for server properties in GlassFish v3\
Prelude as follows:

    asadmin get server | grep listener 

shows all the properties with the text “listener” in them.

In GlassFish v3 Prelude, you can set port numbers for administration\
and the HTTP listener in the installer – but not for the HTTPS\
listener. You might find yourself needing to explicitly specify the\
administration port in your asadmin command. For example:

    asadmin set --port 14848 server.http-service.http-listener.http-listener-2.port=10443

It’s also posible to change the port directly in configuration file:

    <GLASSFISH_PATH>/glassfish/domains/domain1/config/domain.xml

Just change the following properties:

    <network-listeners>
    <network-listener port="8093" ... />
    <network-listener port="8181" ... />
    <network-listener port="4848" ... />
    </network-listeners>

Cheers.

## SSL

Just check to see if there is already a keystore.jks file in the
config folder, otherwise you can create a new one.

    keytool -genkey -alias sta00418 -validity 1000 -keyalg RSA -keysize 2048 -keystore /scratch/ngsp/glassfish3/glassfish/domains/domain1/config/keystore.jks


# GIT

-   Install python-setuptools on your server, you’ll need it to install
    gitosis.

As root:

    yum -y install python-setuptools

## Setup RPMForge

    export http_proxy=http://www-proxy.sg.oracle.com && wget -c http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el5.rf.i386.rpm

and do:

    rpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm

## Install GIT

    yum -y install git

## Install Gitosis

on laptop download:

    http://felixembeddedonandroid.googlecode.com/files/gitosis.tar.gz

upload to server

    rsync -avP gitosis.tar.gz root@linux1.hk.oracle.com:/root/

on server

    tar xvfz gitosis.tar.gz
    cd gitosis
    python setup.py install

Create a user called git, and set the password.

    useradd git
    passwd git

Copy your laptop public key to server

    scp /home/oracle/.ssh/id_rsa.pub git@linux1.hk.oracle.com:/home/git

On server AS git USER!!!

    gitosis-init < id_rsa.pub
    rm id_rsa.pub
    chmod 755 /home/git; chmod 700 /home/git/.ssh; chmod 644 /home/git/.ssh/authorized_keys

On client (laptop)

    cd ~; mkdir projects; cd projects
    git clone git@linux1.hk.oracle.com:gitosis-admin.git
    cd gitosis-admin/

You are pretty much done now...see: [GIT](/git.html) for more
instructions

source:
[http://nfocipher.com/index.php?op=ViewArticle&articleId=12&blogId=1](http://nfocipher.com/index.php?op=ViewArticle&articleId=12&blogId=1)

# HTTP - Apache2

```bash
yum install -y httpd
chkconfig --level 345 httpd on
service httpd start
```

variable                       | meaning
------------------------------ | ---------------------------
`/etc/httpd/conf/httpd.conf`   | config file
`DocumentRoot`                 | is where your web pages go, by default at: `/var/www/html`
`ServerRoot`                   | default: `/etc/httpd` 

More on [apache](apache.html).

# Document Publishing

We use ruby, 2 (or 3) gems and a script to publish our documentation.

* See [ruby](ruby.html#Install) for documentation on how to install ruby.
* install the following gems as root:

```bash
# gem install pygments.rb
# gem install RedCloth
# gem install redcarpet
```

# Jenkins

[Ref:](http://pkg.jenkins-ci.org/redhat/)

    wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
    rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key

If you've previously imported the key from Hudson, the "rpm --import"
will fail because you already have a key. Please ignore that and move
on.

    yum install jenkins

Startup Script:

    [root@db112 ~]# cat > /etc/init.d/jenkins

    #!/bin/bash
    # Jenkins init file for starting and stopping.
    # chkconfig: 35 80 30
    # description: Jenkins startup script
     
    # Source function library.
    . /etc/rc.d/init.d/functions
     
    JENKINS_OWNER="fenton"
    JENKINS_HOME="/home/fenton/bin"
     
    case "$1" in
            start)
                    echo -n $"Starting Jenkins:"
                    su - $JENKINS_OWNER -c "$JENKINS_HOME/startJenkins.sh"
                    echo "OK"
                    ;;
     
            stop)
                    echo "Stop doesn't do anything...sorry!"
                    ;;
     
            *)
                    echo $"Usage: $0 start"
                    ;;
    esac
     

## JBoss 

[ref](http://www.surajitray.com/coders-corner/jboss-5-1-on-ubuntu-10-04/)

(on Ubuntu)

extract in folder: `/usr/local`

create soft link: `cd /usr/local; ln -s jboss-6.0.0.Final/ jboss`, so when you upgrade, only need to change symbolic link

create a jboss user: `sudo useradd -d /usr/local/jboss jboss`

modify `/usr/local/jboss/bin/jboss_init_redhat.sh` so `JAVAPTH` points to a similar location to the output of `which java`

set perms: `sudo chown -R jboss:jboss /usr/local/jboss`

start server: `sudo ./jboss_init_ubuntu.sh start`

stop server: `sudo ./jboss_init_ubuntu.sh stop`

`goto: http://localhost:8080/`, username/password: `admin/admin`

add `jboss` group to your user: 

<pre><div class="sample_code">sudo usermod -a -G jboss <span class="parameter">USERNAME</span></div></pre>

requires a logout/login (or reboot if that doesn't work)

Update perms on folder

    sudo chmod g+w /usr/local/jboss/server/all/deploy


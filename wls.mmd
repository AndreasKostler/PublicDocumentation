CSS: style.css

## Install Files:

Suitable OVM Template Sizing:
	OS: OEL5U3 32bit
	System: 8192M
	RAM: 1536M
	Swap: 1536M

Create a user to do the install as:

	chmod 777 /u01; useradd oracle; passwd oracle
	su - oracle

## Install Base WebLogic Server

    $ chmod a+x wls1032_linux32.bin; ./wls1032_linux32.bin -mode=console

if you have a *.bin wls, if you have a *.jar wls, then do:

    $ java -jar wls1032_linux32.jar

## Configure your install

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/wlserver_10.3/common/bin/config.sh -mode=console</div></pre>

* Choose all defaults.  
* Set administrator password.  
* Add an Administration Server in the Optional Components section.  
* port: 7001

## Start and Stop WLS

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/bin/startWeblogic.sh</div>
<div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/bin/stopWeblogic.sh</div></pre>

## Remove

To delete a WebLogic Domain is to just delete the folder. No additional steps need to be taken. 

## Admin Access

[Ensure port is open](firewall_iptables.html)
	
    http://wls1032.ftravers.com:7001/console
    username:weblogic password:welcome1 (or whatever you set above)

## Deployment

put your war in folder:

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/base_domain/autodeploy</div></pre>

## Remote Debug

Copy and edit file:

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/bin/startWeblogic.sh</div></pre>

new contents:

<pre><div class="sample_code"><div class="highlight">JAVA_OPTIONS="${JAVA_OPTIONS} -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8888,server=y,suspend=n"</div>

# START WEBLOGIC

echo "starting weblogic with Java version:"
</div></pre>

### Ports

[Check if the port is open](linux.html#portScan) from the perspective of the client machine.

If the port isn't open, on RedHat machines you can open the port with:

[Quickly add ports to firewall](firewall_iptables.html#quickFirewall)

## Helpful Aliases

Edit file:

    ~/.bashrc

new contents:

<pre><div class="sample_code"># User specific aliases and functions
<div class="highlight">export WLS_DIR='/home/oracle/wls/user_projects/domains/base_domain'
alias bin="cd ${WLS_DIR}/bin" 
alias start="nohup ${WLS_DIR}/bin/startWebLogic.sh &amp;"
alias stop="${WLS_DIR}/bin/stopWebLogic.sh"
alias debug="${WLS_DIR}/bin/startWebLogicDebug.sh"</div></div></pre>

# Setting up a clustered, load balanced, production ready environment

Credit: I have to note that this whole section was patiently
demonstrated to by by Jean-Philipe (JP) Gal, my friend, colleague, and
mentor.

## Components & Definitions

| Component               | Role                                  |
| ----------------------- | ------------------------------------- |
Apache                    | load balancing, client point of contact
WebLogic Managed Server   | wls instance that handles actual requests
WebLogic Admin Server     | coordinates WL Managed Servers
WebLogic Cluster          | Admin Server and Managed Servers inside same cluster

Initially we'll use just one physical server.  Then we'll show how to
distribute the load to additional physical (or virtual) machines.

## Installation & Configuration

We assume you have done a [Install Base WebLogic Server][]
installation.  The next step is to do the configuration.

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/bin/startWeblogic.sh</div></pre>

Start to [Configure your install][], choose all defaults except for when you get to the section: 

    Select Optional Configuration:
    ------------------------------
       1|Administration Server [x]
       2|Managed Servers, Clusters and Machines [x]
       3|RDBMS Security Store [ ]

    Configure the Administration Server:
    ------------------------------------
        |       Name       |        Value        |
       _|__________________|_____________________|
       1|      *Name:      |     AdminServer     |
       2| *Listen address: | All Local Addresses |
       3|   Listen port:   |        2080         |
       4| SSL listen port: |        2443         |
       5|   SSL enabled:   |        true         |

I've got non-standard port 2080 instead of 7001 and 2443 instead of
7002.  Choose whichever ports you want for your WLS to listen to.

    Configure Managed Servers:
    --------------------------
        |   Name*    | Listen address*  |Listen port|SSL listen port|SSL enabled|
       _|____________|__________________|___________|_______________|___________|
       1|autosr2_srv1|All Local Addre...|   10501   |      N/A      |   false   |
     2->|autosr2_srv2|All Local Addre...|   10502   |      N/A      |   false   |

You can choose whatever names/ports you want for you managed servers,
above is just an example.

Create a cluster, my cluster is called: `autosr2_cluster`

     |    Name*    |Cluster messagi...|Multicast a...|Multicast...|Cluster ad...|   
    _|_____________|__________________|______________|____________|_____________|   
    1|autosr2_cl...|     unicast      |     N/A      |    N/A     |             |

In sections: 
     
    Configure Machines:

and

    Configure Unix Machines:

we don't need to add any machines, since there are no remote hosts
hosting any WLS instances that are part of this cluster yet.  Finish
the configuration with defaults.

Now that the domain has been created, lets start up the Admin Server,
see section: [Start and Stop WLS][], for how to do this.

Connect to the admin console in our case:

    https://amtv1062.us.oracle.com:2443/console

## Startup scripts for servers

Now we'll make startup scripts for our servers.  Create the file:

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/<span class="highlight">startAutosr2_srv1.sh</span></div></pre>

that contains the following contents:

<pre><div class="sample_code">bin/startManagedWebLogic.sh autosr2_srv1 http://<span class="highlight">amtv1062.us.oracle.com:7010 > autosr2_srv1.log</span> &amp;
sleep 1 
tail -f <span class="highlight">autosr2_srv1.log</span></div></pre>

give it execute permissions:

    chmod ug+x startAutosr2_srv1.sh

Do the same for `autosr2_srv2`.

Attempt to start both of these servers.  It will fail, but it will
create the folders under `servers`, which we'll need when we do the
next steps for setting `username` and `password` in the
`boot.properties` file.

put a file called `boot.properties` at the locations (NOTE: you will
have to create each security folder under each server yourself):

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/servers/<span class="highlight">AdminServer</span>/security/boot.properties</div></pre>

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/servers/<span class="highlight">autosr2_srv1</span>/security/boot.properties</div></pre>

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/servers/<span class="highlight">autosr2_srv2</span>/security/boot.properties</div></pre>

put the following into the file:

<pre><div class="sample_code">username=<span class="parameter">USERNAME</span>
password=<span class="parameter">PASSWORD</span></div></pre>

example:

<pre><div class="sample_code">username=<span class="highlight">weblogic</span>
password=<span class="highlight">welcome1</span></div></pre>

## Apache Load Balancer

Now setup and install apache2.  Once installed with a basic setup add
the following to the end of the `LoadModule` section in `httpd.conf`:

    LoadModule weblogic_module modules/mod_wl_22.so

Then add the following at the end of the file:

    <IfModule mod_weblogic.c>
            WebLogicCluster amtv1062.us.oracle.com:,amtv1062.us.oracle.com:8002,amtv1062.us.oracle.com:8003
            Debug ON
            DebugConfigInfo ON
            WLLogFile       /tmp/mod_weblogic.log
    </IfModule>
     
    <Location /load>
            SetHandler weblogic-handler
            WLCookieName    LOADCOOKIE
    </Location>

Where the parameter `WebLogicCluster` has the correct hosts and port
numbers for each of your servers, excluding your AdminServer.  If
you've forgotten the port numbers of the hosts you can find them at:

<pre><div class="sample_code"><span class="parameter">WLS_HOME</span>/user_projects/domains/<span class="parameter">DOMAIN_NAME</span>/config/config.xml</div></pre>


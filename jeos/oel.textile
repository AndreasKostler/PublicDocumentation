"home":../index.html > "jeos":index.html > Oracle Enterprise Linux on Oracle Virtual Machine

p(toc). Table of Contents

{toc}

h1. References

The following link will help you with getting OVMS(Oracle Virtual Machine Server) and OVMM(Oracle Virtual Machine Manager)

* "http://ftravers.wordpress.com/":http://ftravers.wordpress.com/

h1. Intro

These are _rapid_, _reference_ install instructions.  I refer to these directions each time I setup a new VM.  They are not meant as a tutorial, though as I begin to share these with other people that will probably become more necessary and they may change to reflect that.

This document is used after you have create a new VM in OVMM or OVM Template Builder.  After you've created that template there are some basics that all future VM's need and that is what this document is about.  We set the IP address, hostname, gateway, dns, etc..., plus a few other required things.

It's best that the machine be able to see the internet.

h1. Setup

h2. Start VM

You'll be extracting your VM to the folder: @/OVS/running_pool/@

Make sure you have a folder under that folder that contains files like:

bc. 
system.img
vm.cfg

Althought @system.img@ could be called anything, and probably @vm.cfg@ could be too but these are the conventions.  Edit @vm.cfg@ and make sure that the references to the disk images have the correct paths.

Ensure you are in the folder with the vm files noted above and start the vm with: @xm create vm.cfg@

Once it is running you'll need to @VNC@ into machine to update it's IP address,
hostname, etc...

* Ubuntu: Out of the box: Applications > Internet > Remote Desktop Viewer
* Mac: Chicken of the VNC
* Windows: Tight VNC

You set the IP address of the VNC Server to be the IP Address of your OVMS.  The port you use depends on the number of VM's you have running.  Start at port 0 (aka 5900) and work your way up until you find the VM you are interested in.

h2. Configure VM

Now that you are VNC'd into the VM.  

* Login with @root/ovsroot@.
* Determine the IP address with: @ifconfig -a@ you are looking for the entry next to @eth0@ that says @inet addr@.
* Setup an "SSH trust":/secure.html#sshAutoLogin

* Static IP: To convert a dhcp OEL to Static IP address edit file:

bc. 
[root@localhost network-scripts]# vi /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.8.118
NETMASK=255.255.255.0
GATEWAY=192.168.8.1
TYPE=Ethernet

* Hostname: Change the hostname here:

bc. 
[root@localhost network-scripts]# vi /etc/sysconfig/network

* Hostname: set for this session with:

bc. 
[root@localhost ~]# hostname ucm

* Now you can restart your network services with the following command:

bc. 
[root@localhost ~]# service network restart

Your terminal session should die here and you can now setup a new "SSH trust":/secure.html#sshAutoLogin, as trusts are based on IP addresses and you've changed IP Address.

Finally update your name servers, and root passwords

bc. 
[root@db11g ~]# cat > /etc/resolv.conf
search ftravers.com
nameserver 192.168.8.133
[root@db11g ~]# passwd

h1. NFS Mount

You can NFS mount a folder on your VM Server by following "these instructions":/training/linux.html#nfs

----------


Sometimes you'll need to create and attach a shared disk to your image.
I needed this to copy install files onto the image, but after the install
I don't need or want all that extra disk.  Instructions below indicate
how to achieve this.

You only need to run fdisk and mkfs once per shared disk, don't run it each time you mount 
the shared image to one VM or another one.


Create a shared disk in OVM Manager:
	Resources > Shared Virtual Disks > Create Shared Virtual Disk

Specify the details required.  Eventually you'll have a device name like: xvdc

----------------------------------------------

bc. 
# dd if=/dev/zero of=stellent.img bs=1M count=2048
xm block-attach <vm_name> file:<path_to_file> <device> w 
xm block-attach db112 file:/OVS/running_pool/db112/data.img xvdc w  
 
2048 * 5 = 10240

Inside the running VM do the following steps.  Run fdisk with the device:

bc. 
# fdisk /dev/xvdc


You'll get some error messages saying you don't have a valid partition table. 

* Create a new partition, 

bc. 
'n', 'p', '1', <enter>, <enter>, 't', '8e' 'w'.

* Format the file system

bc. 
# mkfs -t ext3 /dev/xvdc
	
* Create a mount point

bc. 
# mkdir /u02

* Add it to /etc/fstab

bc. 
[root@db11g u01]# cat /etc/fstab
/dev/xvdc		/u02			ext3	defaults	1 2
	
* Issue the mount all command:

bc. 
[root@db11g u01]# mount -a
	
-----------------------------------------------
	
You can mount the disk with the following command: (format: mount <device> <directory>)
	# mkdir /u02; mount /dev/xvdc /u02
	
	
Then in /etc/fstab add a line like:
	/dev/xvdc /u02 ext3 defaults 1 2


Mount the volume
	# mount -a
	
To no longer have the volume be part of this image just remove
from /etc/fstab and reboot.

-------------------------------------------------
Install Java SDK
> Download the bin version not the rpm version.
> as the oracle user, create a folder: /u01/java and drop the bin file into there.
> chmod it to be able to execute then execute bin file:
	[oracle@op4 java]$ chmod 755 jdk-1_5_0_22-linux-i586.bin 
	[oracle@op4 java]$ ./jdk-1_5_0_22-linux-i586.bin 
	
------------------------------------------------
setup time and timezone

[root@opel ~]# cd /usr/share/zoneinfo/Asia/
[root@opel Asia]# ln -sf ./Kuala_Lumpur /etc/localtime
[root@opel ~]# ntpdate pool.ntp.org


h1. Glossary

{glossary}

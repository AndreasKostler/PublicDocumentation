<root xmlns="http://www.w3.org/1999/XSL/Format"><layout-master-set><simple-page-master master-name="page-layout" page-height="29.7cm" page-width="21.0cm" margin="1.5cm"><region-body margin-bottom="3cm"/><region-after extent="2cm" region-name="footer"/></simple-page-master></layout-master-set><page-sequence master-reference="page-layout"><flow flow-name="xsl-region-body"><block><block font-weight="bold" font-size="25pt" text-align="center" space-before="19pt">servlet</block><block break-after="page"/></block></flow></page-sequence><page-sequence master-reference="page-layout"><static-content flow-name="footer"><block font-size="10.0pt" text-align="outside"><page-number/></block></static-content><flow flow-name="xsl-region-body"><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">// Determine the HTTP method<block/>boolean isPostMethod = request.getMethod().equals(&#8220;POST&#8221;);</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">// Verify the content length<block/>int contentLength = request.getContentLength();<block/>if (isPostMethod &amp;&amp; (contentLength &lt; 0 || contentLength &gt; 400000))<block/>    application.log(&#8220;Request ignored. Content-Length: &#8221; + contentLength);<block/>else {<block/>    // Get the bean resources<block/>    java.util.ResourceBundle beanRes<block/>        = HandlerUtils.getBeanResources(uploadBean.getClass());</block>   // Construct the base path
    String basePath = request.getServletPath();
    int slashIndex = basePath.lastIndexOf(&#8216;/&#8217;);
    basePath = slashIndex != -1 ? basePath.substring(0, slashIndex+1) : "";   // Create a logger that wraps the servlet context
    ServletLogger logger = new ServletLogger(application);   // Wrap the form data
    FormData formData = new ServletFormData(request, true);   // Form-to-bean mapping: request parameters are mapped to bean properties
    java.util.Hashtable errorTable
        = FormUtils.formToBean(formData, uploadBean, logger);   if (isPostMethod &amp;&amp; errorTable == null) {
        // Construct the processor&#8217;s path
        String procPath = basePath + beanRes.getString(&#8220;[PROC_NAME]&#8221;).trim();       // Process the valid data bean instance
        application.getRequestDispatcher(procPath).forward(request, response);
    } else {
        if (!isPostMethod)
            // Ignore the user errors if the form is requested with GET.
            errorTable = HandlerUtils.removeUserErrors(errorTable);       // Construct the form&#8217;s path
        String formPath = basePath + beanRes.getString(&#8220;[FORM_NAME]&#8221;).trim();
        formPath = application.getRealPath(formPath);       // Get the form template
        FormTemplate template = FormUtils.getTemplate(new java.io.File(formPath));       // Get a new document
        FormDocument document = template.getDocument();       // Bean-to-form mapping: bean properties are mapped to form elements
        FormUtils.beanToForm(uploadBean, errorTable, document, logger);       // Send the form document
        document.send(out);
    }
}
%&gt;</flow></page-sequence></root>
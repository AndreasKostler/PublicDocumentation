"Home":/index.html

p(toc). Table of Contents

{toc}

h1. Ubuntu

h2. Clean Install Setup

h3. Packages

bc. sudo apt-get update

Applications > Ubuntu Software Center > Edit > Software Sources... > Other Software > select the other two partner repositories

setup google chrome preferences > personal stuff ( to sync everything )

sudo apt-get install compiz compizconfig-settings-manager compiz-fusion-plugins-extra simple-ccsm sun-java6-jdk gnome-do gnome-do-plugins texlive-full emacs clisp slime latexdiff git-core git-gui gitosis gitweb ant maven2 pidgin meld apache2 auctex libtiff-tools openoffice.org transmission cups-pdf gimp xmlcopyeditor shutter vlc rar acroread p7zip-full dia virtualbox-ose

some vnc's r good to add too.

set gnome-do to be alt-space, and hide on first startup.

get the git stuff...

bc. 
~$ git config --global user.name "Fenton Travers"
~$ git config --global user.email fenton.travers@gmail.com

* email id_rsa.pub to computer that can add you to gitosis-admin.

bc. 
~$ mkdir projects
~$ cd projects/
~/projects$ git clone ft_git3@spicevan.com:documentation.git
~/projects$ git clone ft_git3@spicevan.com:crmod-ws-wrapper.git
~/projects$ git clone ft_git3@spicevan.com:rtbDispute.git
~/projects$ git clone ft_git3@spicevan.com:lisp.git
~/projects$ git clone ft_git3@spicevan.com:myConfig.git
~/projects$ git clone ft_git3@spicevan.com:SesReader.git
~/projects$ git clone ft_git3@spicevan.com:gitosis-admin.git
~/projects$ git clone ft_git3@spicevan.com:CRMOD_WS_Writer.git
~/projects$ git clone ft_git3@spicevan.com:ngsp-doco.git
~/projects$ git clone ft_git3@spicevan.com:elisp.git
~/projects$ git clone ft_git3@spicevan.com:pdit.git
~/projects$ cd myConfig/
~/projects/myConfig$ sudo ./setConfigRsync.sh 

* ~$ mkdir ~/.emacs.d/cache

* Import Compiz profile

* System > Preferences > Keyboard Shortcuts > 
** Desktop > 
*** Lock screen (disable (BACKSPACE))
*** Home Folder = Super-e (Mod4+E)
** Window Management > Activate the window Menu = Disabled


* Web Downloads
Eclipse, SQLDeveloper, Skype, Adobe Acrobat Reader

h2. Evolution setup

* backup and import all data from old computer
* Edit > Preferences > Composer Preferences > Forward/Reply Style > Inline


h2. Set Open DSN Servers

set /etc/resolv.conf

bc. 
nameserver 208.67.222.222 
nameserver 208.67.220.220

h2. Printers

* PDF's can be found in ~/PDF, can view with @xdg-open <pdf_name>@
* Add a printer from @http://localhost:631@, local username password, HP LaserJet P2015 Series
** HP LaserJet P2015 Series Postscript (recommended) (en, da, de, es, fi, fr, it, ja, ko, nl, nb, pt, sv, zh_CN, zh_TW)
** Connection:	dnssd://HP%20LaserJet%20P2015%20Series%20(0D9452)._pdl-datastream._tcp.local/

h2. Pidgin

* Tools > Preferences > Show system tray icon: Always

* Oracle Account

** Basic
protocol: xmpp
username: fenton.travers
domain: oracle.com

** Advanced
require ssl/tsl = checked
force old (port 5223) ssl = checked
connect port = 5223
connect server = stbeehive.oracle.com


* Gmail Account
** Basic
username = fenton.travers
domain = gmail.com
** Advanced
require ssl/tsl = checked

h2. SQLDeveloper & Eclipse

See "here":#ubuntuInstall for specific details.

bc. 
cd projects/myConfig/
desktop-file-validate Eclipse.desktop
desktop-file-validate SQLDeveloper.desktop 
sudo desktop-file-install Eclipse.desktop
sudo desktop-file-install SQLDeveloper.desktop

Run SQLDeveloper once by hand to set the JDK path.

/bin/sh /home/oracle/bin/sqldeveloper/sqldeveloper.sh

set your jvm home to: /usr/lib/jvm/java-6-sun

Now you should find the icons to launch the apps under: Applications > Programming.

h2. Startup Programs

System > Preferences > Startup Applications ... add
* pidgin, tomboy

h2. VPN

* @https://myaccess.oraclevpn.com@
* Oracle VPN username (with the 8 character_cc)
* Click AnyConnect, download & run shell script.
* Server to connect to: @rmdc-twvpn-2.oraclevpn.com@

h2. Config

* "Generate your ssh key pair":/secure.html#keypair

* Add plugin downthemall to firefox.

h2. Netbeans

bc. 
~/Downloads$ chmod 755 netbeans-6.9.1-ml-java-linux.sh 
~/Downloads$ ./netbeans-6.9.1-ml-java-linux.sh 


h2. Package Management

h3. Package Details

h4. List all installed packages

bc. dpkg --get-selections > installed-software

h4. Re-install based on above list

bc. dpkg --set-selections < installed-software; dselect

h4. Package info

To determine info about a given package do:

bc. 
dpkg -p <package_name>
dpkg -p clisp

h4. List files installed to your system from package.

bc. 
dpkg -L package-Name


h4. List contents of a deb package.

bc. 
dpkg -c filename

h4. re-install

apt-get --reinstall install <package>

h4. purge

apt-get --purge remove <package>

can also do: @dpkg --purge <package>@ then try re-install

h2. Setting up Lisp

h3. Install clisp

bc. sudo apt-get install clisp

h3. slime

"Slime Documentation":http://common-lisp.net/project/slime/doc/html/

installation just requires a few lines in your .emacs:

bc. 
(setq inferior-lisp-program "/usr/bin/clisp") ; your Lisp system
(add-to-list 'load-path "~/bin/slime-2010-11-09/")  ; your SLIME directory
(require 'slime)
(slime-setup)

Run it in emacs with: @Alt-x slime@

h2. Startup, Shutdown, Scripts

To make it usable, and make possible it's automatic startup on server boot change its permissions and update-rc.d

bc. 
sudo chmod +x /etc/init.d/git-daemon
sudo update-rc.d git-daemon defaults

The daemon can be started or stoped by accesing:

bc. 
sudo /etc/init.d/git-daemon start
sudo /etc/init.d/git-daemon stop

To remove the file, just replace the word default with remove:

bc. 
update-rc.d git-daemon remove

h2(#java). Java JDK

Set the JAVA_HOME variable in /etc/environment.  Sample:

bc. 
sudo vi /etc/environment 
JAVA_HOME="/opt/java/java-6-oracle;"

h2. Screen Capture

Shutter

h2. Web Server

bc. 
sudo /etc/init.d/apache2 restart
/etc/apache2/apache2.conf

h3. SSL Web Server

bc. 
sudo a2enmod ssl
sudo nano /etc/apache2/sites-available/default-ssl # set DocumentRoot etc
sudo a2ensite default-ssl
sudo service apache2 restart

h2(#ubuntuInstall). Installing Programs

you can create a *.desktop file like:

bc. 
[Desktop Entry]
Name=Eclipse - Helios
Comment=Eclipse - Helios, IDE
Exec=/home/ftravers/bin/eclipse_helios/eclipse/eclipse
Icon=/home/ftravers/bin/eclipse_helios/eclipse/icon.xpm
Type=Application
Categories=Development;IDE;
Path=/home/ftravers/bin/eclipse_helios/eclipse/

format description can be found here:

bc. http://www.freedesktop.org/wiki/Howto_desktop_files

valid categories can be found here: 

bc. http://standards.freedesktop.org/menu-spec/latest/apa.html

You may want to pass $ @desktop-file-validate foo.desktop@ to check out that your file is OK.

Then, you can install it: @sudo desktop-file-install foo.desktop@

In the above example we'll now find the Eclipse icon in the folder: Applications > Programming.

You can add it to the menu bar by right-clicking and choosing add to panel.

h3. Uninstall

If you mess up, delete the *.desktop file from @/usr/share/applications@

h1. General Unix Commands

h2. Tiff2Pdf



h2. rsync

h3. Copy source to destination.

bc. rsync -avP --stats [source] [destination]

both @[source]@ and @[destination]@ can be like the following formats:

bc. [user_name]@[host_name]:[host_folder]

The following example copies a local folder @c:\fenton_dir@ to a remote server @spicevan.com@, logging in as the @root@ user.  The files get copied to the directory: @/home/ftravers/backupdir@

bc. rsync -avP --stats c:\fenton_dir root@spicevan.com:/home/ftravers/backupdir

The beauties of rsync are: 
* it will pick up where it left off.  Good for big files and slow network links.
* if you change a large file and re-run rsync it will not transfer the whole file only the sections of the file that have changed
* you can use it on a whole directory structure and it will only send the files that have changed.
* ... and a whole lot of other more technical details that I won't bother getting into here...

h2. Environment Variables

Edit the file: @~/.bashrc@, set an environment variable like the following:

bc. export [variable_name]=[variable_value]

The example below sets two environment variables: @PATH@ and @JAVA_HOME@.  Notice with the @PATH@ example I reuse the existing value of the @PATH@ variable to extend it.  This way I'm _adding_ to the path not _replacing_ it.

bc. 
export PATH=$PATH:/home/ft/bin/apache-maven-2.2.1/bin:/home/ft/bin/jdk1.6.0_18/bin
export JAVA_HOME=/home/ft/bin/jdk1.6.0_18

* Global Environment Variables

Try: @/etc/bash.bashrc@

h2. Aliasing

Oftentimes we want to create shortcuts to commands that are arduous to type over and over.  An alias is your friend in these cases.  Just like Environment Variables, put these in @~/.bashrc@.  The way to do it is:

bc. alias [new_short_name]='[long_painful_to_type_command]'

example below allows me to type _vms_ instead of _ssh root@vms.lab.com_.  Notice the use of single quotes (') around the command.

bc. alias vms='ssh root@vms.lab.com'

h2. Misc Commands

h3. Grep

Remove found files with either the png or the jpg string in them...the trick is the \| part.

bc. find . | grep -v "png\|jpg"

h3. Linking 

Create a soft link:

bc. ln -s <existing_file> <new_link_name>

h3. Date / Time

bc. hwclock --set --date='08/18/07 14:40:40' --localtime

h2(#nfs). NFS

h3. Server

On exporting server, @/etc/exports@, the format of the entry is: 

bc. 
<share_folder> <authorized_hosts_list> <share_settings>

example:

bc. 
/OVS/sharedDisk * (rw,sync,all_squash,anonuid=500,anongid=500)

bc. [root@vl-vmsrv2 jeos]# service nfs restart

The following is how to mount another machines NFS exports:

h3. Client

<server>:<serv_dir>

bc. 
[root@vl-vmsrv2 ~]# cat /etc/fstab
jpbox:/u01/Shared	/mount/jpbox		nfs	defaults	0 0
[root@vl-vmsrv2 ~]# mount -a

h2. Compiz Settings

Add the following:

** (Add) Effects > Wobbly Windows

** (Remove) Desktop > Viewport Switcher

** (Edit) Desktop > Expo
*** Bindings
**** Expo Button = Ctrl - Button5
**** Drag&Drop = Ctrl - Button1
**** Exit Expo = Ctrl - Button4
*** Appearance
Viewport Distance = .15
Hide panels/docs in expo = checked
Mipmaps = checked
Brightness = 71
Saturation = 62

** (Edit) Desktop > Desktop Wall
*** Viewport Switch Preview
Preview Scale = 100
Background Gradient = All Black
Others = All white
*** Bindings
Move Up/Down/Next/Prev = Ctrl - <direction arrow>

** (Edit) Window Management > Grid
Remove Alt from all key bindings

** (Remove) Static Application Switcher

** (Add) Application Switcher
*** Next Window = Ctrl-Super-KPRight
*** Prev Window = Ctrl-Super-KPLeft

** (Add) Shift Switcher (resolve conflict by setting dont set terminiate)
*** Bindings
**** Next Window = Alt-Tab
**** Prev Window = Alt-Shift-Tab

** (Edit) Scale
*** Bindings
**** Initiate Window Picker = Super-KP5(begin)
**** Initiate Window Picker for all Windows = Ctrl-Super-KP5(begin)

bc. 
oracle@oracle-laptop:~/projects/myConfig$ cat SQLDeveloper.desktop 
[Desktop Entry]
Name=SQL Developer
Comment=SQL Developer Program
Exec=/bin/sh /home/oracle/bin/sqldeveloper/sqldeveloper.sh
Icon=/home/oracle/bin/sqldeveloper/icon.png
Type=Application
Categories=Development;Database;
Path=/home/oracle/bin/sqldeveloper/


bc. 
[Desktop Entry]
Name=Eclipse - Helios
Comment=Eclipse - Helios, IDE
Exec=/home/ftravers/bin/eclipse_3.6.1/eclipse
Icon=/home/ftravers/bin/eclipse_3.6.1/icon.xpm
Type=Application
Categories=Development;IDE;
Path=/home/ftravers/bin/eclipse_3.6.1/


h1. Redhat derivatives

h2. rpm

For installing a software package, you use the rpm command with -i
option (which stands for "install"). For example, to install an RPM
package called software-2.3.4.rpm:

bc. # rpm -i software-2.3.4.rpm

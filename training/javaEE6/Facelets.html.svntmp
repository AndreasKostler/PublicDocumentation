<?xml version='1.0' encoding='utf-8' ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Facelets</title><link type="text/css" rel="stylesheet" href="/styles/main.css"/></head><body><p><a href="../../index.html">&lt;&lt; Home</a></p><ol style="list-style: none;"><li><a href="Facelets.html#Introduction">Introduction</a><ol style="list-style: none;"><li><a href="Facelets.html#Inclusion">Inclusion</a></li><li><a href="Facelets.html#Templating">Templating</a></li></ol></li><li><a href="Facelets.html#Firststeps">First steps</a><ol style="list-style: none;"><li><a href="Facelets.html#Including">Including</a></li><li><a href="Facelets.html#Templating2">Templating</a></li></ol></li></ol><h1 id="Introduction">Introduction</h1><p>Facelets are the new way to do UI in Java EE.  There are two primary concepts learn about here.  They are <em>inclusion</em> and <em>templating</em>.  </p><h2 id="Inclusion">Inclusion</h2><p>Basically inclusion means to include the content from one file into another.  The classic example of this is having a repeated footer or header on all pages of your website.  If you want to change your logo, you can simply change it in one file and everywhere you have included this &#8216;header&#8217; file, it will be automatically updated.  If you didn&#8217;t use this technique then updating your logo would mean going to each page of your website and updating the logo.  As you can see this would be quite tedious.</p><h2 id="Templating">Templating</h2><p>The second technique is templating or creating layouts.  This involves creating a template that you will use over and over again, but will fill in with different contents each time.  The classic example of this for websites is if you want to move your navigation from the left hand side to the top, it would be much better to have one template that specifies the layout of your page and just update that.</p><h1 id="Firststeps">First steps</h1><p>The first code will demonstrate how to do <em>including</em>.  </p><h2 id="Including">Including</h2><h2 id="Templating2">Templating</h2><p>Create two files <code>src/main/webapp/pages/home.xhtml</code> and  <code>src/main/webapp/templates/masterLayout.xhtml</code></p><p>In <code>masterLayout.xhtml</code> put the following code: </p><pre><code>&lt;html xmlns:ui="http://java.sun.com/jsf/facelets"&gt;
  &lt;head&gt;
    &lt;title&gt;&lt;ui:insert name="title"/&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;ui:insert name="heading"/&gt;
    &lt;ui:insert name="content"/&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>In <code>home.xhtml</code> put the following:</p><pre><code>&lt;html xmlns:ui="http://java.sun.com/jsf/facelets"&gt;
	&lt;body&gt;
		&lt;ui:composition template="/templates/masterLayout.xhtml"&gt;
		  &lt;ui:define name="title"&gt;A List of Contacts&lt;/ui:define&gt;
		  &lt;ui:define name="heading"&gt;Contacts&lt;/ui:define&gt;
		  &lt;ui:define name="content"&gt;
			   Hello this is the body&lt;br/&gt;
			   You can put whatever HTML you want here too&lt;br/&gt;
		  &lt;/ui:define&gt;
		&lt;/ui:composition&gt;
	&lt;/body&gt;
&lt;/html&gt;
</code></pre><p>There are three parts to this concept.  </p><p>1 &#8211; In your template you define the regions you want to be replaced with  </p><p><code>&lt;ui:insert name="someName"/&gt;</code> </p><p>sections, replacing <em>someName</em> with an appropriate name.  </p><p>2 &#8211; In the file that will use the template, first you specify which template to use with the </p><p><code>&lt;ui:composition template="/templates/masterLayout.xhtml"&gt;</code> </p><p>code.  </p><p>3 &#8211; Then for each section in the template we want to replace we use code like the following: </p><p><code>&lt;ui:define name="someName"&gt; Some HTML code &lt;/ui:define&gt;</code></p><p>replacing <em>someName</em> with the section name we want to replace.</p></body></html>
"home":../../index.html > "Training":../index.html > "Java EE 6":index.html > Navigation

p(toc). Table of Contents

{toc}

h1(#basicnav). Basic Navigation

To get from one page to another a common technique is to use a command button.  Create the following two files, with the specified content.

<filelocation>/src/main/webapp/pageone.xhtml

bc. 
<html 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html">
	<body>
		This is page one!
		<f:view>
			<h:form>
				<h:commandButton action="pagetwo" value="forward"/>
			</h:form>
		</f:view>
	</body>
</html>


<filelocation>/src/main/webapp/pagetwo.xhtml

bc. 
<html 
	xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html">
	<body>
		This is page two.<br/>
		<f:view>
			<h:form>
				<h:commandButton action="pageone" value="back"/>
			</h:form>
		</f:view>			
	</body>
</html>

This gives you two pages that let you go back and forth between them.  The key thing to noice is the @action@ flag.  @.xhtml@ gets appended to whatever is inside the quotes, and in this case that equates to the other page.

h1. Standard links

Standard links still work but just keep in mind to use a @.jsf@ extension and not a @.xhtml@ extension for your target for it to work properly.  Here is a sample:

<filelocation>/src/main/webapp/pageone.xhtml

bc. 
...
			<h:form>
				<h:commandButton action="pagetwo" value="forward"/>
				<br/>
				<a href="pagetwo.jsf">Page Two Link</a>
			</h:form>
...


<filelocation>/src/main/webapp/pagetwo.xhtml

bc. 
...
			<h:form>
				<h:commandButton action="pageone" value="back"/>
				<br/>
				<a href="pageone.jsf">Page One Link</a>
			</h:form>
...




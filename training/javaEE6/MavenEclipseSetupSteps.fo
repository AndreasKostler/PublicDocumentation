<root xmlns="http://www.w3.org/1999/XSL/Format"><layout-master-set><simple-page-master master-name="page-layout" page-height="29.7cm" page-width="21.0cm" margin="1.5cm"><region-body margin-bottom="3cm"/><region-after extent="2cm" region-name="footer"/></simple-page-master></layout-master-set><page-sequence master-reference="page-layout"><flow flow-name="xsl-region-body"><block><block font-weight="bold" font-size="25pt" text-align="center" space-before="19pt">MavenEclipseSetupSteps</block><block break-after="page"/></block></flow></page-sequence><page-sequence master-reference="page-layout"><static-content flow-name="footer"><block font-size="10.0pt" text-align="outside"><page-number/></block></static-content><flow flow-name="xsl-region-body"><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; rebuild your eclipse configuration files <block/>cd ~/maven_tutorial/&lt;project_name&gt;; mvn eclipse:clean eclipse:eclipse</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">One time only step:<block/>	=&gt; set your MVN_REPO classpath variable in eclipse (ensure eclipse is not running)<block/>mvn -Declipse.workspace=/Users/fentontravers/Documents/workspace4 eclipse:add-maven-repo</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">cd ~/maven_tutorial</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; create a maven web app<block/>mvn archetype:generate -DinteractiveMode=n -DgroupId=com.spicevan -DartifactId=simpleWeb -DarchetypeArtifactId=maven-archetype-webapp<block/>cd simpleWeb</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; make your project suitable for using with eclipse<block/>mvn eclipse:eclipse </block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; Open eclipse and choose: File &gt; Import &gt; Import Existing Projects into Workspace</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; add the following into your pom.xml<block/>	&lt;repositories&gt;<block/>		&lt;repository&gt;<block/>			&lt;id&gt;maven2-repository.dev.java.net&lt;/id&gt;<block/>			&lt;name&gt;Java.net Repository for Maven&lt;/name&gt;<block/>			&lt;url&gt;http://download.java.net/maven/2&lt;/url&gt;<block/>		&lt;/repository&gt;<block/>	&lt;/repositories&gt;<block/>	&lt;dependencies&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;junit&lt;/groupId&gt;<block/>			&lt;artifactId&gt;junit&lt;/artifactId&gt;<block/>			&lt;version&gt;3.8.1&lt;/version&gt;<block/>			&lt;scope&gt;test&lt;/scope&gt;<block/>		&lt;/dependency&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;com.sun.faces&lt;/groupId&gt;<block/>			&lt;artifactId&gt;jsf-api&lt;/artifactId&gt;<block/>			&lt;version&gt;2.0.2&lt;/version&gt;<block/>		&lt;/dependency&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;com.sun.faces&lt;/groupId&gt;<block/>			&lt;artifactId&gt;jsf-impl&lt;/artifactId&gt;<block/>			&lt;version&gt;2.0.2&lt;/version&gt;<block/>		&lt;/dependency&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;taglibs&lt;/groupId&gt;<block/>			&lt;artifactId&gt;standard&lt;/artifactId&gt;<block/>			&lt;version&gt;1.1.2&lt;/version&gt;<block/>		&lt;/dependency&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;javax.servlet&lt;/groupId&gt;<block/>			&lt;artifactId&gt;jstl&lt;/artifactId&gt;<block/>			&lt;version&gt;1.1.2&lt;/version&gt;<block/>		&lt;/dependency&gt;<block/>	&lt;/dependencies&gt;<block/>	&lt;build&gt;<block/>		&lt;finalName&gt;simpleWeb2&lt;/finalName&gt;<block/>		&lt;pluginManagement&gt;<block/>			&lt;plugins&gt;<block/>				&lt;plugin&gt;<block/>					&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;<block/>					&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;<block/>					&lt;version&gt;2.0.2&lt;/version&gt;<block/>					&lt;configuration&gt;<block/>						&lt;source&gt;1.5&lt;/source&gt;<block/>						&lt;target&gt;1.5&lt;/target&gt;<block/>					&lt;/configuration&gt;<block/>				&lt;/plugin&gt;<block/>				&lt;plugin&gt;<block/>					&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;<block/>					&lt;artifactId&gt;maven-eclipse-plugin&lt;/artifactId&gt;<block/>					&lt;version&gt;2.7&lt;/version&gt;<block/>					&lt;configuration&gt;<block/>						&lt;downloadSources&gt;false&lt;/downloadSources&gt;<block/>						&lt;wtpversion&gt;2.0&lt;/wtpversion&gt;<block/>					&lt;/configuration&gt;<block/>				&lt;/plugin&gt;<block/>			&lt;/plugins&gt;<block/>		&lt;/pluginManagement&gt;<block/>	&lt;/build&gt;</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; rebuild your eclipse configuration files <block/>mvn eclipse:clean eclipse:eclipse</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">==&gt; Add the Faces Servlet mapping into your web.xml<block/>    &lt;context-param&gt;<block/>        &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt;<block/>        &lt;param-value&gt;Development&lt;/param-value&gt;<block/>    &lt;/context-param&gt;<block/>    &lt;servlet&gt;<block/>        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;<block/>        &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;<block/>    &lt;/servlet&gt;<block/>    &lt;servlet-mapping&gt;<block/>        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;<block/>        &lt;url-pattern&gt;*.jsf&lt;/url-pattern&gt;<block/>    &lt;/servlet-mapping&gt; </block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">==&gt; Create a folder: java at: src/main/, right click and choose use as a source folder,<block/>right click project &gt; Build Path &gt; Configure Build Path &gt; Order and Export<block/>put your java folder at the top of the list</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">==&gt; Create the following managed bean:<block/>import javax.faces.bean.ManagedBean;</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">@ManagedBean(name = &#8220;welcome&#8221;, eager = true)<block/>public class WelcomeBean {<block/>    public WelcomeBean() {<block/>        System.out.println(&#8220;WelcomeBean instantiated&#8221;);<block/>    }<block/>    public String getMessage() {<block/>        return &#8220;I'm alive!&#8221;;<block/>    }<block/>}</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">==&gt; Create your first view template: /src/main/webapp/home.xhtml<block/>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"<block/>   &#8220;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#8221;&gt;<block/>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;<block/>    &lt;head&gt;<block/>        &lt;title&gt;Hello JSF 2!&lt;/title&gt;<block/>    &lt;/head&gt;<block/>    &lt;body&gt;<block/>       #{welcome.message}<block/>    &lt;/body&gt;<block/>&lt;/html&gt;</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	==&gt; Templating</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">----------------------------------------------------------------<block/>-----------------------------------------------------------------<block/>	==&gt; String Externalization<block/>		=&gt; Create: <block/>src/main/resources/com/spicevan/languages/messages.properties<block/>		=&gt; with contents:<block/>hello=Hello World!</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">		=&gt; in src/main/webapp/home.xhtml put:<block/>&lt;html xmlns:f="http://java.sun.com/jsf/core"&gt;<block/>&lt;f:loadBundle basename="com.spicevan.language.messages" var="msgs" /&gt;<block/>Greetings: #{msgs.hello}</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	==&gt; Alternative, perhaps better as we don&#8217;t have to define in every page then.<block/>You may want to only specify the message string once, to do so put the following<block/>in your /src/main/webapp/WEB-INF/faces-config.xml</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">&lt;?xml version=&#8220;1.0&#8221;?&gt;<block/>&lt;faces-config xmlns="http://java.sun.com/xml/ns/javaee"<block/>              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<block/>              xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd"<block/>              version=&#8220;2.0&#8221;&gt;<block/>  &lt;application&gt;<block/>    &lt;resource-bundle&gt;<block/>      &lt;base-name&gt;com.spicevan.language.messages&lt;/base-name&gt;<block/>      &lt;var&gt;msgs&lt;/var&gt;<block/>    &lt;/resource-bundle&gt;<block/>  &lt;/application&gt;              <block/>&lt;/faces-config&gt;</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">-------------------------------------------------------------------</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	==&gt; Including Images:<block/>stick graphics here: src/main/resources/images</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">&lt;h:graphicImage value="#{resource['images:Picture 1.png']}"/&gt;</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">I believe resource is a hashmap.</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">==&gt; Internationalization</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Set your firefox to desire the french language first:<block/>Preferences &gt; Content &gt; Languages (choose) &gt; put &#8216;fr&#8217; at the top.  Reload the page.</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">		=&gt; Do same for french version<block/>src/main/resources/com/spicevan/languages/messages_fr.properties<block/>hello=Bonjour Monde!</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If a view is not associated with a locale explicity, JSF uses &#8220;Accept-Language&#8221; <block/>header in request data from browser to find out the locale to be picked. It <block/>compares the header&#8217;s values with the ones configured in faces-config.xml and <block/>if no match is found default locale is selected. </block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">How to associate a view with a locale?</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">From: http://www.i-coding.de/www/en/jsf/application/locale.html</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">But my preferred solution is to use an custom ViewHandler, which extends <block/>the JSF ViewHandler <inline baseline-shift="super" font-size="75%"><basic-link internal-destination="___fn5">5</basic-link></inline> or the Facelets ViewHandler <inline baseline-shift="super" font-size="75%"><basic-link internal-destination="___fn6">6</basic-link></inline>. Only thing to <block/>use this class is to register it in the faces config file. </block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">&lt;application&gt;  &lt;view-handler&gt;de.icoding.CustomViewHandler&lt;/view-handler&gt; &lt;/application&gt;</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In order to set the locale for all pages after own conditions, just overwrite the method <block/>calculateLocale. For example in an SEO application just write: </block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">public Locale calculateLocale(FacesContext context) { String path = null; <block/>path = context.getExternalContext().getRequestServletPath(); <block/>if (path.indexOf(&#8220;/de/&#8221;) &gt; 0) <block/> return Locale.GERMAN; else return Locale.ENGLISH; }</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">========<block/>==&gt; Tutorials</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">http://www.javaserverfaces.org/get-started</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Seems like a good tutorial:<block/>http://www.vogella.de/articles/JavaServerFaces/article.html</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">JSF &amp; JPA, persistence tutorial:<block/>http://blogs.sun.com/carolmcdonald/entry/sample_application_using_jsf_spring</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">http://andyschwartz.wordpress.com/2009/07/31/whats-new-in-jsf-2/</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">http://info.rmatics.org/2009/10/17/jsf2_tutorial_0/</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">http://www.ibm.com/developerworks/java/library/j-jsf2fu1/index.html</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">========<block/>junk notes below</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; Determin if you have maven installed<block/>mvn --version<block/>	=&gt; locate it&#8217;s location<block/>which mvn<block/>	=&gt; go there and edit the conf file specifying your repo location<block/>cd /usr/share/maven/conf<block/>vi settings.xml <block/>sudo vi settings.xml<block/>	=&gt; go to your home folder and create a folder to hold your maven projects.<block/>cd <block/>mkdir maven_tutorial<block/>cd maven_tutorial/<block/>	=&gt; create a basic maven project.<block/>mvn archetype:create -DgroupId=com.mytutorial  -DartifactId=simple<block/>	=&gt; set your MVN_REPO classpath variable in eclipse (ensure eclipse is not running)<block/>mvn -Declipse.workspace=/Users/fentontravers/Documents/workspace2 eclipse:add-maven-repo<block/>cd simple<block/>	=&gt; make your project suitable for using with eclipse<block/>mvn eclipse:eclipse <block/>	=&gt; run your project<block/>java -cp ./target/simple-1.0-SNAPSHOT.jar  com.mytutorial.App <block/>	=&gt; put your project in your repository for sharing<block/>mvn install<block/>cd ~/maven_tutorial/<block/>	=&gt; create a maven web app<block/>mvn archetype:create -DgroupId=com.mytutorial -DartifactId=simpleWeb -DarchetypeArtifactId=maven-archetype-webapp<block/>cd simpleWeb<block/>mvn eclipse:eclipse <block/>	=&gt; add this into your POM</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; rebuild your eclipse configuration files <block/>	(note: this command will delete and then rebuild the eclipse files. This <block/>	means that you don’t have to check-in these eclipse related files and folders into your source <block/>	control. You can add .project, .classpath and .settings files/folder to subversion ignore list.)<block/>mvn eclipse:clean eclipse:eclipse<block/>	=&gt; build the war file<block/>mvn package<block/>	=&gt; add the following to your pom.xml</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">&lt;project xmlns=&#8220;http://maven.apache.org/POM/4.0.0&#8221; xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<block/>	xsi:schemaLocation=&#8220;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&#8221;&gt;<block/>	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;<block/>	&lt;groupId&gt;com.mytutorial&lt;/groupId&gt;<block/>	&lt;artifactId&gt;simpleWeb2&lt;/artifactId&gt;<block/>	&lt;packaging&gt;war&lt;/packaging&gt;<block/>	&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;<block/>	&lt;name&gt;simpleWeb2 Maven Webapp&lt;/name&gt;<block/>	&lt;url&gt;http://maven.apache.org&lt;/url&gt;<block/>	&lt;repositories&gt;<block/>		&lt;repository&gt;<block/>			&lt;id&gt;maven2-repository.dev.java.net&lt;/id&gt;<block/>			&lt;name&gt;Java.net Repository for Maven&lt;/name&gt;<block/>			&lt;url&gt;http://download.java.net/maven/2&lt;/url&gt;<block/>		&lt;/repository&gt;<block/>	&lt;/repositories&gt;</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	&lt;dependencies&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;junit&lt;/groupId&gt;<block/>			&lt;artifactId&gt;junit&lt;/artifactId&gt;<block/>			&lt;version&gt;3.8.1&lt;/version&gt;<block/>			&lt;scope&gt;test&lt;/scope&gt;<block/>		&lt;/dependency&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;com.sun.faces&lt;/groupId&gt;<block/>			&lt;artifactId&gt;jsf-api&lt;/artifactId&gt;<block/>			&lt;version&gt;2.0.2&lt;/version&gt;<block/>		&lt;/dependency&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;com.sun.faces&lt;/groupId&gt;<block/>			&lt;artifactId&gt;jsf-impl&lt;/artifactId&gt;<block/>			&lt;version&gt;2.0.2&lt;/version&gt;<block/>		&lt;/dependency&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;taglibs&lt;/groupId&gt;<block/>			&lt;artifactId&gt;standard&lt;/artifactId&gt;<block/>			&lt;version&gt;1.1.2&lt;/version&gt;<block/>		&lt;/dependency&gt;<block/>		&lt;dependency&gt;<block/>			&lt;groupId&gt;javax.servlet&lt;/groupId&gt;<block/>			&lt;artifactId&gt;jstl&lt;/artifactId&gt;<block/>			&lt;version&gt;1.1.2&lt;/version&gt;<block/>		&lt;/dependency&gt;<block/>	&lt;/dependencies&gt;<block/>	&lt;build&gt;<block/>		&lt;finalName&gt;simpleWeb2&lt;/finalName&gt;<block/>		&lt;pluginManagement&gt;<block/>			&lt;plugins&gt;<block/>				&lt;plugin&gt;<block/>					&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;<block/>					&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;<block/>					&lt;version&gt;2.0.2&lt;/version&gt;<block/>					&lt;configuration&gt;<block/>						&lt;source&gt;1.5&lt;/source&gt;<block/>						&lt;target&gt;1.5&lt;/target&gt;<block/>					&lt;/configuration&gt;<block/>				&lt;/plugin&gt;<block/>				&lt;plugin&gt;<block/>					&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;<block/>					&lt;artifactId&gt;maven-eclipse-plugin&lt;/artifactId&gt;<block/>					&lt;version&gt;2.7&lt;/version&gt;<block/>					&lt;configuration&gt;<block/>						&lt;downloadSources&gt;false&lt;/downloadSources&gt;<block/>						&lt;wtpversion&gt;2.0&lt;/wtpversion&gt;<block/>					&lt;/configuration&gt;<block/>				&lt;/plugin&gt;<block/>			&lt;/plugins&gt;<block/>		&lt;/pluginManagement&gt;<block/>	&lt;/build&gt;<block/>&lt;/project&gt;</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">-----------</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">mvn eclipse:eclipse -Dwtpversion=2.0</block><block font-size="10.0pt" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">	=&gt; build the war file<block/>mvn package<block/>	=&gt; add the following to your pom.xml</block></flow></page-sequence></root>
# Work In Progress

## Testing - Fitnesse

* [Reference 1](http://johannesbrodwall.com/2008/03/19/some-fitnesse-tricks-classpath-and-debugging/)

### Launch Fitnesse

```bash
$ java -jar fitnesse.jar -p 8081
```

### Quick Start

```
!path target/classes
!path /.m2/repository/org/fitnesse/fitnesse/20060719/fitnesse-20060719.jar
!path /.m2/repository/org/fitnesse/fitlibrary/20060719/fitlibrary-20060719.jar

!|my.test.ExampleFixture|
|first|second|sum?|product?|
|10|10|20|100|
|1|0|1|0|
|10000|1|10001|10000|
```

### Fitnesse and GIT

This will create a subfolder in the folder specified by the -d
parameter, called FitnesseRoot, if it doesn't already exist, with all
the stuff it needs to run.








## Cascading Release

So i have two maven projects that I control.  One depends on another,
say webapp depends on jar library.  I'm trying to setup continuous
deployment, so I have the webapp depending on the SNAPSHOT version of
the jar library.  Now when I check-in code to the jar and push to the
git server, the webapp gets nicely built.  I've setup a post-receive
hook on the git server to trigger the jar lib build in jenkins.

Now I'd like to have a one-step (button click) process that would do
the following:

assume for starters the pom's have the following in them:

```xml
<artifactId>jarlib</artifactId>
<versionId>0.0.1-SNAPSHOT</versionId>
```

and

```xml
<artifactId>webapp</artifactId>
<versionId>0.0.1-SNAPSHOT</versionId>
...
<dependency>
  <artifactId>jarlib</artifactId>
  <versionId>0.0.1-SNAPSHOT</versionId>
...
```

I'd like two artifacts to be released webapp:0.0.1 and jarlib:0.0.1.  I'd like the poms to now look like:

```xml
<artifactId>jarlib</artifactId>
<versionId>0.0.2-SNAPSHOT</versionId>
```

and

```xml
<artifactId>webapp</artifactId>
<versionId>0.0.2-SNAPSHOT</versionId>
...
<dependency>
  <artifactId>jarlib</artifactId>
  <versionId>0.0.2-SNAPSHOT</versionId>
...
```
